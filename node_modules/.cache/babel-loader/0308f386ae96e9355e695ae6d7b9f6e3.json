{"ast":null,"code":"import _objectSpread from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/src/app/pages/material-kit/auto-complete/AutocompleteCombo.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { Autocomplete, styled, TextField } from '@mui/material';\nimport { createFilterOptions } from '@mui/material/Autocomplete';\nimport React, { Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar AutoComplete = styled(Autocomplete)(function () {\n  return {\n    width: 300,\n    marginBottom: '16px'\n  };\n});\nvar suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Albania'\n}, {\n  label: 'Algeria'\n}, {\n  label: 'American Samoa'\n}, {\n  label: 'Andorra'\n}, {\n  label: 'Angola'\n}, {\n  label: 'Anguilla'\n}, {\n  label: 'Antarctica'\n}, {\n  label: 'Antigua and Barbuda'\n}, {\n  label: 'Argentina'\n}, {\n  label: 'Armenia'\n}, {\n  label: 'Aruba'\n}, {\n  label: 'Australia'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Azerbaijan'\n}, {\n  label: 'Bahamas'\n}, {\n  label: 'Bahrain'\n}, {\n  label: 'Bangladesh'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Belarus'\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Belize'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}, {\n  label: 'Bhutan'\n}, {\n  label: 'Bolivia, Plurinational State of'\n}, {\n  label: 'Bonaire, Sint Eustatius and Saba'\n}, {\n  label: 'Bosnia and Herzegovina'\n}, {\n  label: 'Botswana'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Brunei Darussalam'\n}];\nvar filter = createFilterOptions();\nvar AutocompleteCombo = function AutocompleteCombo() {\n  _s();\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  var handleChange = function handleChange(_, newValue) {\n    if (newValue && newValue.inputValue) {\n      setValue({\n        label: newValue.inputValue\n      });\n      return;\n    }\n    setValue(newValue);\n  };\n  var filterOptions = function filterOptions(options, params) {\n    var filtered = filter(options, params);\n    if (params.inputValue !== '') {\n      filtered.push({\n        inputValue: params.inputValue,\n        label: \"Add \\\"\".concat(params.inputValue, \"\\\"\")\n      });\n    }\n    return filtered;\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AutoComplete, {\n      options: suggestions,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.label;\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Combo box\",\n          variant: \"outlined\",\n          fullWidth: true\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n      value: value,\n      options: suggestions,\n      onChange: handleChange,\n      filterOptions: filterOptions,\n      getOptionLabel: function getOptionLabel(option) {\n        // e.g value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        return option.label;\n      },\n      renderOption: function renderOption(option) {\n        return option.label;\n      },\n      style: {\n        width: 300\n      },\n      freeSolo: true,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Free solo with text demo\",\n          variant: \"outlined\",\n          fullWidth: true\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n      options: suggestions,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.label;\n      },\n      getOptionDisabled: function getOptionDisabled(option) {\n        return option === suggestions[0] || option === suggestions[2];\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Disabled option\",\n          variant: \"outlined\",\n          fullWidth: true\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, _this);\n};\n_s(AutocompleteCombo, \"EEjdpY/CSe7/lDQurV9yi1RbKSs=\");\n_c = AutocompleteCombo;\nexport default AutocompleteCombo;\nvar _c;\n$RefreshReg$(_c, \"AutocompleteCombo\");","map":{"version":3,"names":["Autocomplete","styled","TextField","createFilterOptions","React","Fragment","jsxDEV","_jsxDEV","AutoComplete","width","marginBottom","suggestions","label","filter","AutocompleteCombo","_s","_React$useState","useState","_React$useState2","_slicedToArray","value","setValue","handleChange","_","newValue","inputValue","filterOptions","options","params","filtered","push","concat","children","getOptionLabel","option","renderInput","_objectSpread","variant","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","_this","onChange","renderOption","style","freeSolo","getOptionDisabled","_c","$RefreshReg$"],"sources":["/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/src/app/pages/material-kit/auto-complete/AutocompleteCombo.jsx"],"sourcesContent":["import { Autocomplete, styled, TextField } from '@mui/material';\nimport { createFilterOptions } from '@mui/material/Autocomplete';\nimport React, { Fragment } from 'react';\n\nconst AutoComplete = styled(Autocomplete)(() => ({\n  width: 300,\n  marginBottom: '16px',\n}));\n\nconst suggestions = [\n  { label: 'Afghanistan' },\n  { label: 'Aland Islands' },\n  { label: 'Albania' },\n  { label: 'Algeria' },\n  { label: 'American Samoa' },\n  { label: 'Andorra' },\n  { label: 'Angola' },\n  { label: 'Anguilla' },\n  { label: 'Antarctica' },\n  { label: 'Antigua and Barbuda' },\n  { label: 'Argentina' },\n  { label: 'Armenia' },\n  { label: 'Aruba' },\n  { label: 'Australia' },\n  { label: 'Austria' },\n  { label: 'Azerbaijan' },\n  { label: 'Bahamas' },\n  { label: 'Bahrain' },\n  { label: 'Bangladesh' },\n  { label: 'Barbados' },\n  { label: 'Belarus' },\n  { label: 'Belgium' },\n  { label: 'Belize' },\n  { label: 'Benin' },\n  { label: 'Bermuda' },\n  { label: 'Bhutan' },\n  { label: 'Bolivia, Plurinational State of' },\n  { label: 'Bonaire, Sint Eustatius and Saba' },\n  { label: 'Bosnia and Herzegovina' },\n  { label: 'Botswana' },\n  { label: 'Bouvet Island' },\n  { label: 'Brazil' },\n  { label: 'British Indian Ocean Territory' },\n  { label: 'Brunei Darussalam' },\n];\n\nconst filter = createFilterOptions();\n\nconst AutocompleteCombo = () => {\n  const [value, setValue] = React.useState(null);\n\n  const handleChange = (_, newValue) => {\n    if (newValue && newValue.inputValue) {\n      setValue({ label: newValue.inputValue });\n      return;\n    }\n    setValue(newValue);\n  };\n\n  const filterOptions = (options, params) => {\n    const filtered = filter(options, params);\n    if (params.inputValue !== '') {\n      filtered.push({ inputValue: params.inputValue, label: `Add \"${params.inputValue}\"` });\n    }\n    return filtered;\n  };\n\n  return (\n    <Fragment>\n      <AutoComplete\n        options={suggestions}\n        getOptionLabel={(option) => option.label}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Combo box\" variant=\"outlined\" fullWidth />\n        )}\n      />\n\n      <AutoComplete\n        value={value}\n        options={suggestions}\n        onChange={handleChange}\n        filterOptions={filterOptions}\n        getOptionLabel={(option) => {\n          // e.g value selected with enter, right from the input\n          if (typeof option === 'string') {\n            return option;\n          }\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          return option.label;\n        }}\n        renderOption={(option) => option.label}\n        style={{ width: 300 }}\n        freeSolo\n        renderInput={(params) => (\n          <TextField {...params} label=\"Free solo with text demo\" variant=\"outlined\" fullWidth />\n        )}\n      />\n\n      <AutoComplete\n        options={suggestions}\n        getOptionLabel={(option) => option.label}\n        getOptionDisabled={(option) => option === suggestions[0] || option === suggestions[2]}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Disabled option\" variant=\"outlined\" fullWidth />\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default AutocompleteCombo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}