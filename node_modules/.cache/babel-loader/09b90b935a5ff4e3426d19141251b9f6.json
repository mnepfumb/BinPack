{"ast":null,"code":"import _toConsumableArray from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nexport var SET_USER_NAVIGATION = 'SET_USER_NAVIGATION';\nvar getfilteredNavigations = function getfilteredNavigations() {\n  var navList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var role = arguments.length > 1 ? arguments[1] : undefined;\n  return navList.reduce(function (array, nav) {\n    if (nav.auth) {\n      if (nav.auth.includes(role)) {\n        array.push(nav);\n      }\n    } else {\n      if (nav.children) {\n        nav.children = getfilteredNavigations(nav.children, role);\n        array.push(nav);\n      } else {\n        array.push(nav);\n      }\n    }\n    return array;\n  }, []);\n};\nexport function getNavigationByUser() {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n      user = _getState.user,\n      _getState$navigations = _getState.navigations,\n      navigations = _getState$navigations === void 0 ? [] : _getState$navigations;\n    var filteredNavigations = getfilteredNavigations(navigations, user.role);\n    dispatch({\n      type: SET_USER_NAVIGATION,\n      payload: _toConsumableArray(filteredNavigations)\n    });\n  };\n}","map":{"version":3,"names":["SET_USER_NAVIGATION","getfilteredNavigations","navList","arguments","length","undefined","role","reduce","array","nav","auth","includes","push","children","getNavigationByUser","dispatch","getState","_getState","user","_getState$navigations","navigations","filteredNavigations","type","payload","_toConsumableArray"],"sources":["/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/src/app/redux/actions/NavigationAction.js"],"sourcesContent":["export const SET_USER_NAVIGATION = 'SET_USER_NAVIGATION';\n\nconst getfilteredNavigations = (navList = [], role) => {\n  return navList.reduce((array, nav) => {\n    if (nav.auth) {\n      if (nav.auth.includes(role)) {\n        array.push(nav);\n      }\n    } else {\n      if (nav.children) {\n        nav.children = getfilteredNavigations(nav.children, role);\n        array.push(nav);\n      } else {\n        array.push(nav);\n      }\n    }\n    return array;\n  }, []);\n};\n\nexport function getNavigationByUser() {\n  return (dispatch, getState) => {\n    let { user, navigations = [] } = getState();\n\n    let filteredNavigations = getfilteredNavigations(navigations, user.role);\n\n    dispatch({\n      type: SET_USER_NAVIGATION,\n      payload: [...filteredNavigations],\n    });\n  };\n}\n"],"mappings":";AAAA,OAAO,IAAMA,mBAAmB,GAAG,qBAAqB;AAExD,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA,EAA2B;EAAA,IAAvBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,IAAI,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,OAAOH,OAAO,CAACK,MAAM,CAAC,UAACC,KAAK,EAAEC,GAAG,EAAK;IACpC,IAAIA,GAAG,CAACC,IAAI,EAAE;MACZ,IAAID,GAAG,CAACC,IAAI,CAACC,QAAQ,CAACL,IAAI,CAAC,EAAE;QAC3BE,KAAK,CAACI,IAAI,CAACH,GAAG,CAAC;MACjB;IACF,CAAC,MAAM;MACL,IAAIA,GAAG,CAACI,QAAQ,EAAE;QAChBJ,GAAG,CAACI,QAAQ,GAAGZ,sBAAsB,CAACQ,GAAG,CAACI,QAAQ,EAAEP,IAAI,CAAC;QACzDE,KAAK,CAACI,IAAI,CAACH,GAAG,CAAC;MACjB,CAAC,MAAM;QACLD,KAAK,CAACI,IAAI,CAACH,GAAG,CAAC;MACjB;IACF;IACA,OAAOD,KAAK;EACd,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAED,OAAO,SAASM,mBAAmBA,CAAA,EAAG;EACpC,OAAO,UAACC,QAAQ,EAAEC,QAAQ,EAAK;IAC7B,IAAAC,SAAA,GAAiCD,QAAQ,EAAE;MAArCE,IAAI,GAAAD,SAAA,CAAJC,IAAI;MAAAC,qBAAA,GAAAF,SAAA,CAAEG,WAAW;MAAXA,WAAW,GAAAD,qBAAA,cAAG,EAAE,GAAAA,qBAAA;IAE5B,IAAIE,mBAAmB,GAAGpB,sBAAsB,CAACmB,WAAW,EAAEF,IAAI,CAACZ,IAAI,CAAC;IAExES,QAAQ,CAAC;MACPO,IAAI,EAAEtB,mBAAmB;MACzBuB,OAAO,EAAAC,kBAAA,CAAMH,mBAAmB;IAClC,CAAC,CAAC;EACJ,CAAC;AACH"},"metadata":{},"sourceType":"module"}