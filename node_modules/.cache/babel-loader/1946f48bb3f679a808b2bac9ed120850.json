{"ast":null,"code":"var _jsxFileName = \"/Users/bluevisionai/Desktop/untitled folder/untitled folder/gitdagray/binpack-16-03-23/src/app/auth/AuthGuard.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport useAuth from 'app/hooks/useAuth';\nimport { flat } from 'app/utils/utils';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport AllPages from '../Routes/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar userHasPermission = function userHasPermission(pathname, user, routes) {\n  // console.log('AuthProvider-user: ' + user);\n  console.log('AuthProvider-pathname: ' + pathname);\n  // console.log('AuthProvider-routes: ' + routes);\n\n  if (!user) {\n    return false;\n  }\n  var matched = routes.find(function (r) {\n    return r.path === pathname;\n  });\n  var authenticated = matched && matched.auth && matched.auth.length ? matched.auth.includes(user.role) : true;\n  console.log('AuthProvider-matched: ' + matched);\n  console.log('AuthProvider-matched.auth: ' + matched.auth);\n  console.log('AuthProvider-matched.auth.length: ' + matched.auth.length);\n  console.log('AuthProvider-matched.auth.includes(user.role): ' + matched.auth.includes(user.role));\n\n  // const authenticated = true;\n  return authenticated;\n};\nvar checkPathname = function checkPathname(user) {\n  var pathname = '';\n  if (user.role === 'admin') {\n    pathname = '/dashboard/admin';\n  } else if (user.role === 'hospital') {\n    pathname = '/dashboard/hospital';\n  } else if (user.role === 'service provider') {\n    pathname = '/dashboard/service_provider';\n  } else if (user.role === 'driver') {\n    pathname = '/dashboard/driver';\n  }\n  return pathname;\n};\nvar AuthGuard = function AuthGuard(_ref) {\n  _s();\n  var children = _ref.children;\n  var authenticated;\n  var _useAuth = useAuth(),\n    isAuthenticated = _useAuth.isAuthenticated,\n    user = _useAuth.user;\n  var _useLocation = useLocation(),\n    pathname = _useLocation.pathname;\n\n  // Override path\n  if (user && isAuthenticated) {\n    console.log('user: ' + user.role);\n    console.log('AuthProvider-isAuthenticated: ' + isAuthenticated);\n    var newpathname = checkPathname(user);\n    if (newpathname !== pathname) {\n      pathname = newpathname;\n    }\n    var routes = flat(AllPages);\n    var hasPermission = userHasPermission(pathname, user, routes);\n    console.log('AuthProvider-hasPermission: ' + hasPermission);\n    authenticated = isAuthenticated && hasPermission;\n  } else {\n    authenticated = isAuthenticated;\n  }\n  console.log('AuthProvider-authenticated: ' + authenticated);\n  // IF YOU NEED ROLE BASED AUTHENTICATION,\n  // UNCOMMENT ABOVE LINES\n  // AND COMMENT OUT BELOW authenticated VARIABLE\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: authenticated ? children :\n    /*#__PURE__*/\n    // console.log('/session/signin')\n    _jsxDEV(Navigate, {\n      replace: true,\n      to: \"/session/signin\",\n      state: {\n        from: pathname\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n};\n_s(AuthGuard, \"Lv/npDCs8NYAiNXtVN30MhlTHtA=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = AuthGuard;\nexport default AuthGuard;\nvar _c;\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"names":["useAuth","flat","Navigate","useLocation","AllPages","jsxDEV","_jsxDEV","Fragment","_Fragment","userHasPermission","pathname","user","routes","console","log","matched","find","r","path","authenticated","auth","length","includes","role","checkPathname","AuthGuard","_ref","_s","children","_useAuth","isAuthenticated","_useLocation","newpathname","hasPermission","replace","to","state","from","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["/Users/bluevisionai/Desktop/untitled folder/untitled folder/gitdagray/binpack-16-03-23/src/app/auth/AuthGuard.jsx"],"sourcesContent":["import useAuth from 'app/hooks/useAuth';\r\nimport { flat } from 'app/utils/utils';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport AllPages from '../Routes/routes';\r\n\r\nconst userHasPermission = (pathname, user, routes) => {\r\n  // console.log('AuthProvider-user: ' + user);\r\n  console.log('AuthProvider-pathname: ' + pathname);\r\n  // console.log('AuthProvider-routes: ' + routes);\r\n\r\n  if (!user) {\r\n    return false;\r\n  }\r\n  const matched = routes.find((r) => r.path === pathname);\r\n\r\n  const authenticated =\r\n    matched && matched.auth && matched.auth.length ? matched.auth.includes(user.role) : true;\r\n\r\n  console.log('AuthProvider-matched: ' + matched);\r\n  console.log('AuthProvider-matched.auth: ' + matched.auth);\r\n  console.log('AuthProvider-matched.auth.length: ' + matched.auth.length);\r\n  console.log('AuthProvider-matched.auth.includes(user.role): ' + matched.auth.includes(user.role));\r\n\r\n  // const authenticated = true;\r\n  return authenticated;\r\n};\r\n\r\nconst checkPathname = (user) => {\r\n  var pathname = '';\r\n  if (user.role === 'admin') {\r\n    pathname = '/dashboard/admin';\r\n  } else if (user.role === 'hospital') {\r\n    pathname = '/dashboard/hospital';\r\n  } else if (user.role === 'service provider') {\r\n    pathname = '/dashboard/service_provider';\r\n  }else if (user.role === 'driver') {\r\n    pathname = '/dashboard/driver';\r\n  }\r\n  return pathname;\r\n};\r\n\r\nconst AuthGuard = ({ children }) => {\r\n  let authenticated;\r\n  let { isAuthenticated, user } = useAuth();\r\n  var { pathname } = useLocation();\r\n\r\n\r\n  // Override path\r\n  if (user && isAuthenticated) {\r\n    console.log('user: ' + user.role );\r\n    console.log('AuthProvider-isAuthenticated: ' + isAuthenticated);\r\n\r\n    const newpathname = checkPathname(user);\r\n    if (newpathname !== pathname) {\r\n      pathname = newpathname;\r\n    }\r\n\r\n    const routes = flat(AllPages);\r\n\r\n    const hasPermission = userHasPermission(pathname, user, routes);\r\n\r\n    console.log('AuthProvider-hasPermission: ' + hasPermission);\r\n\r\n    authenticated = isAuthenticated && hasPermission;\r\n  } else {\r\n    authenticated = isAuthenticated;\r\n  }\r\n\r\n  console.log('AuthProvider-authenticated: ' + authenticated);\r\n  // IF YOU NEED ROLE BASED AUTHENTICATION,\r\n  // UNCOMMENT ABOVE LINES\r\n  // AND COMMENT OUT BELOW authenticated VARIABLE\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      {authenticated ? (\r\n        children\r\n      ) : (\r\n        // console.log('/session/signin')\r\n        <Navigate replace to=\"/session/signin\" state={{ from: pathname }} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthGuard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}