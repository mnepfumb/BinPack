{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"value\", \"label\"];\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  var disabled = ownerState.disabled,\n    highlighted = ownerState.highlighted,\n    selected = ownerState.selected;\n  var slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n/**\n * An unstyled option to be used within a SelectUnstyled.\n */\n\nvar OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  var _componentsProps$root;\n  var children = props.children,\n    className = props.className,\n    component = props.component,\n    _props$components = props.components,\n    components = _props$components === void 0 ? {} : _props$components,\n    _props$componentsProp = props.componentsProps,\n    componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n    disabled = props.disabled,\n    value = props.value,\n    label = props.label,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var selectContext = React.useContext(SelectUnstyledContext);\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n  var Root = component || components.Root || 'li';\n  var selectOption = {\n    value: value,\n    label: label || children,\n    disabled: disabled\n  };\n  var optionState = selectContext.getOptionState(selectOption);\n  var optionProps = selectContext.getOptionProps(selectOption);\n  var listboxRef = selectContext.listboxRef;\n  var ownerState = _extends({}, props, optionState);\n  var optionRef = React.useRef(null);\n  var handleRef = useForkRef(ref, optionRef);\n  React.useEffect(function () {\n    // Scroll to the currently highlighted option\n    if (optionState.highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n      var listboxClientRect = listboxRef.current.getBoundingClientRect();\n      var optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [optionState.highlighted, listboxRef]);\n  var classes = useUtilityClasses(ownerState);\n  var rootProps = appendOwnerState(Root, _extends({}, other, optionProps, componentsProps.root, {\n    ref: handleRef,\n    className: clsx(classes.root, className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)\n  }), ownerState);\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the Root slot.\n   * Either a string to use a HTML element or a component.\n   * This is equivalent to components.Root.\n   * If both are provided, the component is used.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside the OptionUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n/**\n * An unstyled option to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [OptionUnstyled API](https://mui.com/base/api/option-unstyled/)\n */\n\nexport default /*#__PURE__*/React.memo(OptionUnstyled);","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","clsx","PropTypes","unstable_useForkRef","useForkRef","composeClasses","SelectUnstyledContext","getOptionUnstyledUtilityClass","appendOwnerState","jsx","_jsx","useUtilityClasses","ownerState","disabled","highlighted","selected","slots","root","OptionUnstyled","forwardRef","props","ref","_componentsProps$root","children","className","component","_props$components","components","_props$componentsProp","componentsProps","value","label","other","selectContext","useContext","Error","Root","selectOption","optionState","getOptionState","optionProps","getOptionProps","listboxRef","optionRef","useRef","handleRef","useEffect","current","listboxClientRect","getBoundingClientRect","optionClientRect","top","scrollTop","bottom","classes","rootProps","process","env","NODE_ENV","propTypes","node","string","elementType","shape","object","bool","any","isRequired","memo"],"sources":["/Users/bluevisionai/Desktop/untitled folder/untitled folder/gitdagray/binpack-16-03-23/node_modules/@mui/base/OptionUnstyled/OptionUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"value\", \"label\"];\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n/**\n * An unstyled option to be used within a SelectUnstyled.\n */\n\n\nconst OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  var _componentsProps$root;\n\n  const {\n    children,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    disabled,\n    value,\n    label\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const selectContext = React.useContext(SelectUnstyledContext);\n\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n\n  const Root = component || components.Root || 'li';\n  const selectOption = {\n    value,\n    label: label || children,\n    disabled\n  };\n  const optionState = selectContext.getOptionState(selectOption);\n  const optionProps = selectContext.getOptionProps(selectOption);\n  const listboxRef = selectContext.listboxRef;\n\n  const ownerState = _extends({}, props, optionState);\n\n  const optionRef = React.useRef(null);\n  const handleRef = useForkRef(ref, optionRef);\n  React.useEffect(() => {\n    // Scroll to the currently highlighted option\n    if (optionState.highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [optionState.highlighted, listboxRef]);\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = appendOwnerState(Root, _extends({}, other, optionProps, componentsProps.root, {\n    ref: handleRef,\n    className: clsx(classes.root, className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)\n  }), ownerState);\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the Root slot.\n   * Either a string to use a HTML element or a component.\n   * This is equivalent to components.Root.\n   * If both are provided, the component is used.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the OptionUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n/**\n * An unstyled option to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [OptionUnstyled API](https://mui.com/base/api/option-unstyled/)\n */\n\nexport default /*#__PURE__*/React.memo(OptionUnstyled);"],"mappings":"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"},"metadata":{},"sourceType":"module"}