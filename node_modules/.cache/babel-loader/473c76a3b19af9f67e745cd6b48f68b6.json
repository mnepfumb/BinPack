{"ast":null,"code":"import _defineProperty from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/src/app/pages/material-kit/switch/FormGroupSwitch.jsx\",\n  _s = $RefreshSig$();\nimport FormControl from \"@mui/material/FormControl\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormGroupSwitch() {\n  _s();\n  var _useState = useState({\n      gilad: true,\n      jason: false,\n      antoine: true\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, event.target.checked)));\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    component: \"fieldset\",\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      component: \"legend\",\n      children: \"Assign responsibility\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: \"Gilad Gray\",\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: state.gilad,\n          onChange: handleChange(\"gilad\"),\n          value: \"gilad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: \"Jason Killian\",\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: state.jason,\n          onChange: handleChange(\"jason\"),\n          value: \"jason\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: \"Antoine Llorca\",\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: state.antoine,\n          onChange: handleChange(\"antoine\"),\n          value: \"antoine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n      children: \"Be careful\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(FormGroupSwitch, \"r2skKAYRdtww4EdTejBQ1oCiLDE=\");\n_c = FormGroupSwitch;\nvar _c;\n$RefreshReg$(_c, \"FormGroupSwitch\");","map":{"version":3,"names":["FormControl","FormControlLabel","FormGroup","FormHelperText","FormLabel","Switch","useState","jsxDEV","_jsxDEV","FormGroupSwitch","_s","_useState","gilad","jason","antoine","_useState2","_slicedToArray","state","setState","handleChange","name","event","_objectSpread","_defineProperty","target","checked","component","children","fileName","_jsxFileName","lineNumber","columnNumber","label","control","onChange","value","_c","$RefreshReg$"],"sources":["/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/src/app/pages/material-kit/switch/FormGroupSwitch.jsx"],"sourcesContent":["import FormControl from \"@mui/material/FormControl\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport { useState } from \"react\";\n\nexport default function FormGroupSwitch() {\n  const [state, setState] = useState({\n    gilad: true,\n    jason: false,\n    antoine: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n\n      <FormGroup>\n        <FormControlLabel\n          label=\"Gilad Gray\"\n          control={<Switch checked={state.gilad} onChange={handleChange(\"gilad\")} value=\"gilad\" />}\n        />\n        <FormControlLabel\n          label=\"Jason Killian\"\n          control={<Switch checked={state.jason} onChange={handleChange(\"jason\")} value=\"jason\" />}\n        />\n        <FormControlLabel\n          label=\"Antoine Llorca\"\n          control={\n            <Switch checked={state.antoine} onChange={handleChange(\"antoine\")} value=\"antoine\" />\n          }\n        />\n      </FormGroup>\n\n      <FormHelperText>Be careful</FormHelperText>\n    </FormControl>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}