{"ast":null,"code":"import _regeneratorRuntime from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/src/app/contexts/NotificationContext.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'LOAD_NOTIFICATIONS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          notifications: action.payload\n        });\n      }\n    case 'DELETE_NOTIFICATION':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          notifications: action.payload\n        });\n      }\n    case 'CLEAR_NOTIFICATIONS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          notifications: action.payload\n        });\n      }\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\nvar NotificationContext = /*#__PURE__*/createContext({\n  notifications: [],\n  deleteNotification: function deleteNotification() {},\n  clearNotifications: function clearNotifications() {},\n  getNotifications: function getNotifications() {},\n  createNotification: function createNotification() {}\n});\nexport var NotificationProvider = function NotificationProvider(_ref) {\n  _s();\n  var settings = _ref.settings,\n    children = _ref.children;\n  var _useReducer = useReducer(reducer, []),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    state = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  var deleteNotification = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(notificationID) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post('/api/notification/delete', {\n                id: notificationID\n              });\n            case 3:\n              res = _context.sent;\n              dispatch({\n                type: 'DELETE_NOTIFICATION',\n                payload: res.data\n              });\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n    return function deleteNotification(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var clearNotifications = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post('/api/notification/delete-all');\n            case 3:\n              res = _context2.sent;\n              dispatch({\n                type: 'CLEAR_NOTIFICATIONS',\n                payload: res.data\n              });\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n    return function clearNotifications() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var getNotifications = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.get('/api/notification');\n            case 3:\n              res = _context3.sent;\n              dispatch({\n                type: 'LOAD_NOTIFICATIONS',\n                payload: res.data\n              });\n              _context3.next = 10;\n              break;\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(_context3.t0);\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n    return function getNotifications() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var createNotification = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(notification) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.post('/api/notification/add', {\n                notification: notification\n              });\n            case 3:\n              res = _context4.sent;\n              dispatch({\n                type: 'CREATE_NOTIFICATION',\n                payload: res.data\n              });\n              _context4.next = 10;\n              break;\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error(_context4.t0);\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n    return function createNotification(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getNotifications();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      notifications: state.notifications,\n      deleteNotification: deleteNotification,\n      clearNotifications: clearNotifications,\n      getNotifications: getNotifications,\n      createNotification: createNotification\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, _this);\n};\n_s(NotificationProvider, \"8u/JqpRC/mF6XFjbMf7O0gRQXow=\");\n_c = NotificationProvider;\nexport default NotificationContext;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useReducer","axios","jsxDEV","_jsxDEV","reducer","state","action","type","_objectSpread","notifications","payload","NotificationContext","deleteNotification","clearNotifications","getNotifications","createNotification","NotificationProvider","_ref","_s","settings","children","_useReducer","_useReducer2","_slicedToArray","dispatch","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","notificationID","res","wrap","_callee$","_context","prev","next","post","id","sent","data","t0","console","error","stop","_x","apply","arguments","_ref3","_callee2","_callee2$","_context2","_ref4","_callee3","_callee3$","_context3","get","_ref5","_callee4","notification","_callee4$","_context4","_x2","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/src/app/contexts/NotificationContext.js"],"sourcesContent":["import React, { createContext, useEffect, useReducer } from 'react'\nimport axios from 'axios'\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'LOAD_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'DELETE_NOTIFICATION': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'CLEAR_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        default: {\n            return { ...state }\n        }\n    }\n}\n\nconst NotificationContext = createContext({\n    notifications: [],\n    deleteNotification: () => {},\n    clearNotifications: () => {},\n    getNotifications: () => {},\n    createNotification: () => {},\n})\n\nexport const NotificationProvider = ({ settings, children }) => {\n    const [state, dispatch] = useReducer(reducer, [])\n\n    const deleteNotification = async (notificationID) => {\n        try {\n            const res = await axios.post('/api/notification/delete', {\n                id: notificationID,\n            })\n            dispatch({\n                type: 'DELETE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const clearNotifications = async () => {\n        try {\n            const res = await axios.post('/api/notification/delete-all')\n            dispatch({\n                type: 'CLEAR_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const getNotifications = async () => {\n        try {\n            const res = await axios.get('/api/notification')\n            dispatch({\n                type: 'LOAD_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n    const createNotification = async (notification) => {\n        try {\n            const res = await axios.post('/api/notification/add', {\n                notification,\n            })\n            dispatch({\n                type: 'CREATE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    useEffect(() => {\n        getNotifications()\n    }, [])\n\n    return (\n        <NotificationContext.Provider\n            value={{\n                notifications: state.notifications,\n                deleteNotification,\n                clearNotifications,\n                getNotifications,\n                createNotification,\n            }}\n        >\n            {children}\n        </NotificationContext.Provider>\n    )\n}\n\nexport default NotificationContext\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}