{"ast":null,"code":"import _toConsumableArray from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/src/app/pages/charts/echarts/Doughnut.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useTheme } from '@mui/system';\nimport ReactEcharts from 'echarts-for-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar DoughnutChart = function DoughnutChart(_ref) {\n  _s();\n  var height = _ref.height,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? [] : _ref$color;\n  var theme = useTheme();\n  var option = {\n    legend: {\n      show: true,\n      itemGap: 20,\n      icon: 'circle',\n      bottom: 0,\n      textStyle: {\n        color: theme.palette.text.secondary,\n        fontSize: 13,\n        fontFamily: 'roboto'\n      }\n    },\n    tooltip: {\n      show: false,\n      trigger: 'item',\n      formatter: '{a} <br/>{b}: {c} ({d}%)'\n    },\n    xAxis: [{\n      axisLine: {\n        show: false\n      },\n      splitLine: {\n        show: false\n      }\n    }],\n    yAxis: [{\n      axisLine: {\n        show: false\n      },\n      splitLine: {\n        show: false\n      }\n    }],\n    series: [{\n      name: 'Traffic Rate',\n      type: 'pie',\n      radius: ['45%', '72.55%'],\n      center: ['50%', '50%'],\n      avoidLabelOverlap: false,\n      hoverOffset: 5,\n      stillShowZeroSum: false,\n      label: {\n        normal: {\n          show: false,\n          position: 'center',\n          // shows the description data to center, turn off to show in right side\n          textStyle: {\n            color: theme.palette.text.secondary,\n            fontSize: 13,\n            fontFamily: 'roboto'\n          },\n          formatter: '{a}'\n        },\n        emphasis: {\n          show: true,\n          textStyle: {\n            fontSize: '14',\n            fontWeight: 'normal'\n          },\n          formatter: '{b} \\n{c} ({d}%)'\n        }\n      },\n      labelLine: {\n        normal: {\n          show: false\n        }\n      },\n      data: [{\n        value: 65,\n        name: 'Google'\n      }, {\n        value: 20,\n        name: 'Facebook'\n      }, {\n        value: 15,\n        name: 'Others'\n      }],\n      itemStyle: {\n        emphasis: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ReactEcharts, {\n    style: {\n      height: height\n    },\n    option: _objectSpread(_objectSpread({}, option), {}, {\n      color: _toConsumableArray(color)\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, _this);\n};\n_s(DoughnutChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["useTheme","ReactEcharts","jsxDEV","_jsxDEV","DoughnutChart","_ref","_s","height","_ref$color","color","theme","option","legend","show","itemGap","icon","bottom","textStyle","palette","text","secondary","fontSize","fontFamily","tooltip","trigger","formatter","xAxis","axisLine","splitLine","yAxis","series","name","type","radius","center","avoidLabelOverlap","hoverOffset","stillShowZeroSum","label","normal","position","emphasis","fontWeight","labelLine","data","value","itemStyle","shadowBlur","shadowOffsetX","shadowColor","style","_objectSpread","_toConsumableArray","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/src/app/pages/charts/echarts/Doughnut.jsx"],"sourcesContent":["import { useTheme } from '@mui/system';\nimport ReactEcharts from 'echarts-for-react';\n\nconst DoughnutChart = ({ height, color = [] }) => {\n  const theme = useTheme();\n\n  const option = {\n    legend: {\n      show: true,\n      itemGap: 20,\n      icon: 'circle',\n      bottom: 0,\n      textStyle: { color: theme.palette.text.secondary, fontSize: 13, fontFamily: 'roboto' },\n    },\n    tooltip: { show: false, trigger: 'item', formatter: '{a} <br/>{b}: {c} ({d}%)' },\n    xAxis: [{ axisLine: { show: false }, splitLine: { show: false } }],\n    yAxis: [{ axisLine: { show: false }, splitLine: { show: false } }],\n\n    series: [\n      {\n        name: 'Traffic Rate',\n        type: 'pie',\n        radius: ['45%', '72.55%'],\n        center: ['50%', '50%'],\n        avoidLabelOverlap: false,\n        hoverOffset: 5,\n        stillShowZeroSum: false,\n        label: {\n          normal: {\n            show: false,\n            position: 'center', // shows the description data to center, turn off to show in right side\n            textStyle: {\n              color: theme.palette.text.secondary,\n              fontSize: 13,\n              fontFamily: 'roboto',\n            },\n            formatter: '{a}',\n          },\n          emphasis: {\n            show: true,\n            textStyle: { fontSize: '14', fontWeight: 'normal' },\n            formatter: '{b} \\n{c} ({d}%)',\n          },\n        },\n        labelLine: { normal: { show: false } },\n        data: [\n          { value: 65, name: 'Google' },\n          { value: 20, name: 'Facebook' },\n          { value: 15, name: 'Others' },\n        ],\n        itemStyle: {\n          emphasis: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: 'rgba(0, 0, 0, 0.5)' },\n        },\n      },\n    ],\n  };\n\n  return <ReactEcharts style={{ height: height }} option={{ ...option, color: [...color] }} />;\n};\n\nexport default DoughnutChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}