{"ast":null,"code":"import _defineProperty from \"/Users/bluevisionai/Desktop/untitled folder/untitled folder/gitdagray/binpack-16-03-23/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/bluevisionai/Desktop/untitled folder/untitled folder/gitdagray/binpack-16-03-23/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/bluevisionai/Desktop/untitled folder/untitled folder/gitdagray/binpack-16-03-23/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/bluevisionai/Desktop/untitled folder/untitled folder/gitdagray/binpack-16-03-23/src/app/pages/material-kit/checkbox/SimpleCheckbox.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Checkbox } from '@mui/material';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SimpleCheckbox() {\n  _s();\n  var _React$useState = React.useState({\n      checkedA: true,\n      checkedB: true,\n      checkedF: true\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setState = _React$useState2[1];\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, event.target.checked)));\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      value: \"checkedA\",\n      checked: state.checkedA,\n      onChange: handleChange('checkedA'),\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: state.checkedB,\n      onChange: handleChange('checkedB'),\n      value: \"checkedB\",\n      color: \"primary\",\n      inputProps: {\n        'aria-label': 'secondary checkbox'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      value: \"checkedC\",\n      inputProps: {\n        'aria-label': 'uncontrolled-checkbox'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      disabled: true,\n      value: \"checkedD\",\n      inputProps: {\n        'aria-label': 'disabled checkbox'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      disabled: true,\n      checked: true,\n      value: \"checkedE\",\n      inputProps: {\n        'aria-label': 'disabled checked checkbox'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: state.checkedF,\n      onChange: handleChange('checkedF'),\n      value: \"checkedF\",\n      indeterminate: true,\n      inputProps: {\n        'aria-label': 'indeterminate checkbox'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      defaultChecked: true,\n      color: \"default\",\n      value: \"checkedG\",\n      inputProps: {\n        'aria-label': 'checkbox with default color'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(SimpleCheckbox, \"CovQMndmnbC85VoSlaZWkfFg2sg=\");\n_c = SimpleCheckbox;\nvar _c;\n$RefreshReg$(_c, \"SimpleCheckbox\");","map":{"version":3,"names":["Box","Checkbox","React","jsxDEV","_jsxDEV","SimpleCheckbox","_s","_React$useState","useState","checkedA","checkedB","checkedF","_React$useState2","_slicedToArray","state","setState","handleChange","name","event","_objectSpread","_defineProperty","target","checked","children","value","onChange","inputProps","fileName","_jsxFileName","lineNumber","columnNumber","color","disabled","indeterminate","defaultChecked","_c","$RefreshReg$"],"sources":["/Users/bluevisionai/Desktop/untitled folder/untitled folder/gitdagray/binpack-16-03-23/src/app/pages/material-kit/checkbox/SimpleCheckbox.jsx"],"sourcesContent":["import { Box, Checkbox } from '@mui/material';\nimport React from 'react';\n\nexport default function SimpleCheckbox() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <Box>\n      <Checkbox\n        value=\"checkedA\"\n        checked={state.checkedA}\n        onChange={handleChange('checkedA')}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      <Checkbox\n        checked={state.checkedB}\n        onChange={handleChange('checkedB')}\n        value=\"checkedB\"\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n      <Checkbox value=\"checkedC\" inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\n      <Checkbox disabled value=\"checkedD\" inputProps={{ 'aria-label': 'disabled checkbox' }} />\n\n      <Checkbox\n        disabled\n        checked\n        value=\"checkedE\"\n        inputProps={{ 'aria-label': 'disabled checked checkbox' }}\n      />\n\n      <Checkbox\n        checked={state.checkedF}\n        onChange={handleChange('checkedF')}\n        value=\"checkedF\"\n        indeterminate\n        inputProps={{ 'aria-label': 'indeterminate checkbox' }}\n      />\n\n      <Checkbox\n        defaultChecked\n        color=\"default\"\n        value=\"checkedG\"\n        inputProps={{ 'aria-label': 'checkbox with default color' }}\n      />\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}