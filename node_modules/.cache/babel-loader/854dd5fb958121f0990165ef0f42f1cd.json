{"ast":null,"code":"import _toConsumableArray from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ADD_PRODUCT_TO_CART, DELETE_PRODUCT_FROM_CART, GET_BRAND_LIST, GET_CART_LIST, GET_CATEGORY_LIST, GET_PRODUCT_LIST, GET_RATING_LIST, UPDATE_CART_AMOUNT } from '../actions/EcommerceActions';\nvar initialState = {\n  productList: [],\n  cartList: []\n};\nvar EcommerceReducer = function EcommerceReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PRODUCT_LIST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          productList: _toConsumableArray(action.payload)\n        });\n      }\n    case GET_CATEGORY_LIST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          categoryList: _toConsumableArray(action.payload)\n        });\n      }\n    case GET_RATING_LIST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          ratingList: _toConsumableArray(action.payload)\n        });\n      }\n    case GET_BRAND_LIST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          brandList: _toConsumableArray(action.payload)\n        });\n      }\n    case GET_CART_LIST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartList: _toConsumableArray(action.payload)\n        });\n      }\n    case ADD_PRODUCT_TO_CART:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartList: _toConsumableArray(action.payload)\n        });\n      }\n    case DELETE_PRODUCT_FROM_CART:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartList: _toConsumableArray(action.payload)\n        });\n      }\n    case UPDATE_CART_AMOUNT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartList: _toConsumableArray(action.payload)\n        });\n      }\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n_c = EcommerceReducer;\nexport default EcommerceReducer;\nvar _c;\n$RefreshReg$(_c, \"EcommerceReducer\");","map":{"version":3,"names":["ADD_PRODUCT_TO_CART","DELETE_PRODUCT_FROM_CART","GET_BRAND_LIST","GET_CART_LIST","GET_CATEGORY_LIST","GET_PRODUCT_LIST","GET_RATING_LIST","UPDATE_CART_AMOUNT","initialState","productList","cartList","EcommerceReducer","state","arguments","length","undefined","action","type","_objectSpread","_toConsumableArray","payload","categoryList","ratingList","brandList","_c","$RefreshReg$"],"sources":["/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/src/app/redux/reducers/EcommerceReducer.js"],"sourcesContent":["import {\n  ADD_PRODUCT_TO_CART,\n  DELETE_PRODUCT_FROM_CART,\n  GET_BRAND_LIST,\n  GET_CART_LIST,\n  GET_CATEGORY_LIST,\n  GET_PRODUCT_LIST,\n  GET_RATING_LIST,\n  UPDATE_CART_AMOUNT,\n} from '../actions/EcommerceActions';\n\nconst initialState = {\n  productList: [],\n  cartList: [],\n};\n\nconst EcommerceReducer = function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PRODUCT_LIST: {\n      return {\n        ...state,\n        productList: [...action.payload],\n      };\n    }\n    case GET_CATEGORY_LIST: {\n      return {\n        ...state,\n        categoryList: [...action.payload],\n      };\n    }\n    case GET_RATING_LIST: {\n      return {\n        ...state,\n        ratingList: [...action.payload],\n      };\n    }\n    case GET_BRAND_LIST: {\n      return {\n        ...state,\n        brandList: [...action.payload],\n      };\n    }\n    case GET_CART_LIST: {\n      return {\n        ...state,\n        cartList: [...action.payload],\n      };\n    }\n    case ADD_PRODUCT_TO_CART: {\n      return {\n        ...state,\n        cartList: [...action.payload],\n      };\n    }\n    case DELETE_PRODUCT_FROM_CART: {\n      return {\n        ...state,\n        cartList: [...action.payload],\n      };\n    }\n    case UPDATE_CART_AMOUNT: {\n      return {\n        ...state,\n        cartList: [...action.payload],\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n\nexport default EcommerceReducer;\n"],"mappings":";;AAAA,SACEA,mBAAmB,EACnBC,wBAAwB,EACxBC,cAAc,EACdC,aAAa,EACbC,iBAAiB,EACjBC,gBAAgB,EAChBC,eAAe,EACfC,kBAAkB,QACb,6BAA6B;AAEpC,IAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE;AACZ,CAAC;AAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAA2C;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7D,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKZ,gBAAgB;MAAE;QACrB,OAAAa,aAAA,CAAAA,aAAA,KACKN,KAAK;UACRH,WAAW,EAAAU,kBAAA,CAAMH,MAAM,CAACI,OAAO;QAAC;MAEpC;IACA,KAAKhB,iBAAiB;MAAE;QACtB,OAAAc,aAAA,CAAAA,aAAA,KACKN,KAAK;UACRS,YAAY,EAAAF,kBAAA,CAAMH,MAAM,CAACI,OAAO;QAAC;MAErC;IACA,KAAKd,eAAe;MAAE;QACpB,OAAAY,aAAA,CAAAA,aAAA,KACKN,KAAK;UACRU,UAAU,EAAAH,kBAAA,CAAMH,MAAM,CAACI,OAAO;QAAC;MAEnC;IACA,KAAKlB,cAAc;MAAE;QACnB,OAAAgB,aAAA,CAAAA,aAAA,KACKN,KAAK;UACRW,SAAS,EAAAJ,kBAAA,CAAMH,MAAM,CAACI,OAAO;QAAC;MAElC;IACA,KAAKjB,aAAa;MAAE;QAClB,OAAAe,aAAA,CAAAA,aAAA,KACKN,KAAK;UACRF,QAAQ,EAAAS,kBAAA,CAAMH,MAAM,CAACI,OAAO;QAAC;MAEjC;IACA,KAAKpB,mBAAmB;MAAE;QACxB,OAAAkB,aAAA,CAAAA,aAAA,KACKN,KAAK;UACRF,QAAQ,EAAAS,kBAAA,CAAMH,MAAM,CAACI,OAAO;QAAC;MAEjC;IACA,KAAKnB,wBAAwB;MAAE;QAC7B,OAAAiB,aAAA,CAAAA,aAAA,KACKN,KAAK;UACRF,QAAQ,EAAAS,kBAAA,CAAMH,MAAM,CAACI,OAAO;QAAC;MAEjC;IACA,KAAKb,kBAAkB;MAAE;QACvB,OAAAW,aAAA,CAAAA,aAAA,KACKN,KAAK;UACRF,QAAQ,EAAAS,kBAAA,CAAMH,MAAM,CAACI,OAAO;QAAC;MAEjC;IACA;MAAS;QACP,OAAAF,aAAA,KACKN,KAAK;MAEZ;EAAC;AAEL,CAAC;AAACY,EAAA,GAxDIb,gBAAgB;AA0DtB,eAAeA,gBAAgB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}