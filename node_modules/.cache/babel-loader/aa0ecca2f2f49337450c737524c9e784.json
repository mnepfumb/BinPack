{"ast":null,"code":"import _toConsumableArray from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/src/app/pages/dashboard/shared/Doughnut.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTheme } from '@mui/system';\nimport ReactEcharts from 'echarts-for-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar DoughnutChart = function DoughnutChart(_ref) {\n  _s();\n  var height = _ref.height,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? [] : _ref$color;\n  var theme = useTheme();\n  var option = {\n    legend: {\n      show: true,\n      itemGap: 20,\n      icon: 'circle',\n      bottom: 0,\n      textStyle: {\n        color: theme.palette.text.secondary,\n        fontSize: 13,\n        fontFamily: 'roboto'\n      }\n    },\n    tooltip: {\n      show: false,\n      trigger: 'item',\n      formatter: '{a} <br/>{b}: {c} ({d}%)'\n    },\n    xAxis: [{\n      axisLine: {\n        show: false\n      },\n      splitLine: {\n        show: false\n      }\n    }],\n    yAxis: [{\n      axisLine: {\n        show: false\n      },\n      splitLine: {\n        show: false\n      }\n    }],\n    series: [{\n      name: 'Traffic Rate',\n      type: 'pie',\n      radius: ['45%', '72.55%'],\n      center: ['50%', '50%'],\n      avoidLabelOverlap: false,\n      hoverOffset: 5,\n      stillShowZeroSum: false,\n      label: {\n        normal: {\n          show: false,\n          position: 'center',\n          // shows the description data to center, turn off to show in right side\n          textStyle: {\n            color: theme.palette.text.secondary,\n            fontSize: 13,\n            fontFamily: 'roboto'\n          },\n          formatter: '{a}'\n        },\n        emphasis: {\n          show: true,\n          textStyle: {\n            fontSize: '14',\n            fontWeight: 'normal'\n            // color: \"rgba(15, 21, 77, 1)\"\n          },\n\n          formatter: '{b} \\n{c} ({d}%)'\n        }\n      },\n      labelLine: {\n        normal: {\n          show: false\n        }\n      },\n      data: [{\n        value: 65,\n        name: 'Google'\n      }, {\n        value: 20,\n        name: 'Facebook'\n      }, {\n        value: 15,\n        name: 'Others'\n      }],\n      itemStyle: {\n        emphasis: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ReactEcharts, {\n    style: {\n      height: height\n    },\n    option: _objectSpread(_objectSpread({}, option), {}, {\n      color: _toConsumableArray(color)\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, _this);\n};\n_s(DoughnutChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","useTheme","ReactEcharts","jsxDEV","_jsxDEV","DoughnutChart","_ref","_s","height","_ref$color","color","theme","option","legend","show","itemGap","icon","bottom","textStyle","palette","text","secondary","fontSize","fontFamily","tooltip","trigger","formatter","xAxis","axisLine","splitLine","yAxis","series","name","type","radius","center","avoidLabelOverlap","hoverOffset","stillShowZeroSum","label","normal","position","emphasis","fontWeight","labelLine","data","value","itemStyle","shadowBlur","shadowOffsetX","shadowColor","style","_objectSpread","_toConsumableArray","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["/Users/bluevisionai/Documents/personal_github/Untitled/BinPack/src/app/pages/dashboard/shared/Doughnut.jsx"],"sourcesContent":["import React from 'react'\nimport { useTheme } from '@mui/system'\nimport ReactEcharts from 'echarts-for-react'\n\nconst DoughnutChart = ({ height, color = [] }) => {\n    const theme = useTheme()\n\n    const option = {\n        legend: {\n            show: true,\n            itemGap: 20,\n            icon: 'circle',\n            bottom: 0,\n            textStyle: {\n                color: theme.palette.text.secondary,\n                fontSize: 13,\n                fontFamily: 'roboto',\n            },\n        },\n        tooltip: {\n            show: false,\n            trigger: 'item',\n            formatter: '{a} <br/>{b}: {c} ({d}%)',\n        },\n        xAxis: [\n            {\n                axisLine: {\n                    show: false,\n                },\n                splitLine: {\n                    show: false,\n                },\n            },\n        ],\n        yAxis: [\n            {\n                axisLine: {\n                    show: false,\n                },\n                splitLine: {\n                    show: false,\n                },\n            },\n        ],\n\n        series: [\n            {\n                name: 'Traffic Rate',\n                type: 'pie',\n                radius: ['45%', '72.55%'],\n                center: ['50%', '50%'],\n                avoidLabelOverlap: false,\n                hoverOffset: 5,\n                stillShowZeroSum: false,\n                label: {\n                    normal: {\n                        show: false,\n                        position: 'center', // shows the description data to center, turn off to show in right side\n                        textStyle: {\n                            color: theme.palette.text.secondary,\n                            fontSize: 13,\n                            fontFamily: 'roboto',\n                        },\n                        formatter: '{a}',\n                    },\n                    emphasis: {\n                        show: true,\n                        textStyle: {\n                            fontSize: '14',\n                            fontWeight: 'normal',\n                            // color: \"rgba(15, 21, 77, 1)\"\n                        },\n                        formatter: '{b} \\n{c} ({d}%)',\n                    },\n                },\n                labelLine: {\n                    normal: {\n                        show: false,\n                    },\n                },\n                data: [\n                    {\n                        value: 65,\n                        name: 'Google',\n                    },\n                    {\n                        value: 20,\n                        name: 'Facebook',\n                    },\n                    { value: 15, name: 'Others' },\n                ],\n                itemStyle: {\n                    emphasis: {\n                        shadowBlur: 10,\n                        shadowOffsetX: 0,\n                        shadowColor: 'rgba(0, 0, 0, 0.5)',\n                    },\n                },\n            },\n        ],\n    }\n\n    return (\n        <ReactEcharts\n            style={{ height: height }}\n            option={{\n                ...option,\n                color: [...color],\n            }}\n        />\n    )\n}\n\nexport default DoughnutChart\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}